@namespace Application.Pages
@using Business
@using Business.Models;
@using Business.Models.Common;
@implements IAsyncDisposable
@inject IJSRuntime JS

@if (CraftedGun == null)
{
  <div class="spinner"></div>
}
else
{
  <div id="cards">  

    <figure class=@($"card card--{CraftedGun.Element.ToString().ToLower().Replace(", ","_")}") id="lewt">
      <div class="card__image-container">
        <img src=@($"images/resources/guns/{CraftedGun.GunType}.png") alt="@CraftedGun.GunType" class="card__image">   
      </div>
      
      <figcaption class="card__caption">
        <h1 class=@($"card__name rarity_{CraftedGun.Rarity.ToString().ToLower()}")>@CraftedGun.Name</h1>
        
        <h3 class="card__type">
          @CraftedGun.Element.ToString()
        </h3>

        <h3 class="card__guild">
          @CraftedGun.Guild
        </h3>

        @if (CraftedGun.RedText != null)
        {
          <div class="card__redtexts">
            <h4 class="card__redtext">
              <span class="card__label">@CraftedGun.RedText.Name</span>            
            </h4>
          </div>
        }        

        <table class="card__stats">
          <tbody>            
            <tr>
              <th>Damage</th>
              <td>
                @for (int index = 0; index < CraftedGun.AmountOfDice; index++)
                {
                  <img class="dice_small" src=@($"images/resources/dice/{CraftedGun.DiceType}.png") alt="@CraftedGun.DiceType">
                }
                
              </td>
            </tr>
            
            <tr>
              <th>Range</th>
              <td>@CraftedGun.Range</td>
            </tr>
          </tbody>
        </table>

        <table class="card__hits">
          <caption>Hits By Accuracy</caption>
          <tbody>            
              @foreach(var kvp in CraftedGun.HitsByAccuracy)
              {
                <tr>
                  <th>@kvp.Key</th>
                  <td>@kvp.Value.Hits<img class="icon icon-header" src="images/open-iconic/svg/header.svg" alt="Header"></td>
                  <td>@kvp.Value.Crits<img class="icon icon-aperture" src="images/open-iconic/svg/aperture.svg" alt="Aperture"></td>
                </tr>
              }
          </tbody>
        </table>
        
        <div class="card__abilities">
          @foreach(var bonus in CraftedGun.Bonuses)
          {
            <h4 class="card__ability">
              <span class="card__label">@bonus</span>            
            </h4>
          }
        </div>

        
      </figcaption>
    </figure>
  </div>
  <button @onclick="Download">Download</button>
}

@code {
    [Parameter]
    public Gun CraftedGun { get; set; }

    private IJSObjectReference? module;
    private string? result;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/index.js");
        }
    }

    private async Task Download()
    {
        result = await DownloadImage("cards");
    }

    public async ValueTask<string?> DownloadImage(string id) =>
        module is not null ? 
            await module.InvokeAsync<string>("downloadCard", id) : null;

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            await module.DisposeAsync();
        }
    }
}