@namespace Application.Pages
@using Business
@using Models.Builder;
@using Models.Common;
@inherits BaseItemViewer;

<div>
    <figure class=@GetCardCssClass id="@GetElementId()">
        <ContextMenuTrigger MenuId="@GetMenuId()">
            <div class="card__image-container">
                @if(UseCardImages())
                {
                    <img src=@GetGrenadeImage alt="grenade" class="card__image">
                }
                <img src="@GetGuildImage" alt="@CraftedGrenadeMod.Guild" class="card__guild_image">
            </div>

            <figcaption class="card__caption">
                <h1 class="card__name">@GetCardLabel</h1>

                <h3 class="@GetCssClassCardType">
                    Grenade Mod
                </h3>

                @if (CraftedGrenadeMod.RedText != null)
                {
                    <div class="card__redtexts">
                        <h4 class="card__redtext">
                            <span class="card__label">@CraftedGrenadeMod.RedText.Name</span>
                        </h4>
                    </div>
                }

                <div class="card_label">@CraftedGrenadeMod.Effect</div>

                <table class="card__stats">
                    <tbody>
                        <tr>
                            <th>Damage</th>
                            <td>
                                @for (int index = 0; index < CraftedGrenadeMod.AmountOfDice.Length; index++)
                                {
                                    @for (int diceCount = 0; diceCount < CraftedGrenadeMod.AmountOfDice[index]; diceCount++)
                                    {
                                        <img class="dice_small" src="@GetDiceImage(CraftedGrenadeMod.DiceType[index])" alt="@CraftedGrenadeMod.DiceType[index]">
                                    }
                                }
                            </td>
                        </tr>
                        @if (CraftedGrenadeMod.Element != Element.None)
                        {
                            <tr>
                                <th>Elemental</th>
                                <td>
                                    @foreach (var element in (Element[])Enum.GetValues(typeof(Element)))
                                    {
                                        @if (element == Element.None)
                                        {
                                            continue;
                                        }
                                        @if (CraftedGrenadeMod.Element.HasFlag(element))
                                        {
                                            <img src="@GetElementImage(element.ToString())" alt="@element" class="element">
                                        }
                                    }
                                </td>
                            </tr>
                        }
                        @if (!string.IsNullOrEmpty(CraftedGrenadeMod.RedText?.Effect))
                        {
                            <tr>
                                <th>Red Text</th>
                                <td>@CraftedGrenadeMod.RedText?.Effect</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </figcaption>
        </ContextMenuTrigger>
    </figure>

    <ContextMenu Id="@GetMenuId()">
        <BlazorContextMenu.Item OnClick="@Download"><span class="oi oi-data-transfer-download icon-download"></span> Download</BlazorContextMenu.Item>
        <BlazorContextMenu.Item OnClick="@Copy"><span class="oi oi-clipboard icon-copy"></span> Copy to clipboard</BlazorContextMenu.Item>
    </ContextMenu>

</div>

@code {
    [Parameter]
    public GrenadeMod CraftedGrenadeMod { get; set; }

    [Parameter]
    public bool UseBorderlandsManufacturers { get; set; } = false;

    [Parameter]
    public bool UseCustomManufacturers { get; set; } = false;

    [Parameter]
    public string CustomManufacturerImage { get; set; } = string.Empty;

    public string GetCardCssClass => $"card card--{CraftedGrenadeMod.Rarity.ToString().ToLower()}";

    public string GetCardLabel => CraftedGrenadeMod.GrenadeType;

    public string GetCssClassCardType => $"card__type {(CraftedGrenadeMod.Element != Element.None ? CraftedGrenadeMod.Element.ToString().ToLower() : "normal")}";

    public string GetDiceImage(string diceType) => $"images/resources/dice/{diceType}.png";

    public string GetGrenadeImage => !string.IsNullOrWhiteSpace(CraftedGrenadeMod.ImageUrl)
          ? CraftedGrenadeMod.ImageUrl
          : $"images/resources/grenades/{CraftedGrenadeMod.Guild}.png";

    public string GetGuildImage => UseCustomManufacturers
        ? CustomManufacturerImage
        : $"images/resources/guilds/{(UseBorderlandsManufacturers ? CraftedGrenadeMod.AlternateGuildName : CraftedGrenadeMod.Guild)}.png";

    public override string GetFileName()
    {
        return $"GrenadeMod_{CraftedGrenadeMod.Guild}_{CraftedGrenadeMod.GrenadeType}.png";
    }

    public string GetElementImage(string elementId) => $"images/resources/elements/{elementId}.png";

}