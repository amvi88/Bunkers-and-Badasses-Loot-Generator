@page "/shield"
@namespace Application.Pages
@using Models.Builder;
@using Business.Services;

@inject IShieldService service;
@inject ILogger<ShieldCrafter> logger


<PageTitle>B&B: They're just Shields. Ok?</PageTitle>
<h1>Shield Mods</h1>
<hr />
<EditForm Model=@shieldBuilder OnValidSubmit="Roll" class="well form-horizontal">
  <DataAnnotationsValidator />  
  <ValidationSummary />

  <div class="form-group" >
     <label class="col-md-4 control-label">Player Level:</label>
     <div class="col-md-4">
         <InputNumber @bind-Value="shieldBuilder.PlayerLevel" name="PlayerLevel" class="form-control" aria-label="Player Level"/>
     </div>
  </div>
  <hr class="divider">
  <div class="form-group">
    <input type="submit" class="btn btn-primary" value="Roll"/>
  </div>
</EditForm>

@if (shield != null)
{
  <div id="cards"  class="card_container">  
    <ShieldViewer CraftedShield=@shield.Item/>
  </div>
}

@code {
  ShieldFactoryParameters shieldBuilder = new ShieldFactoryParameters();
  ItemWrapper<Shield> shield = null;

  void Roll(EditContext editContext)
  {
    logger.LogDebug("Roll");
    shield = service.RandomizeShield(shieldBuilder);
  }
}
